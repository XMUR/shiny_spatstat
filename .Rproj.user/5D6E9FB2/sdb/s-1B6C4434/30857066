{
    "contents" : "library(markdown)\nlibrary(shinythemes)\nlibrary(shinyBS)\nlibrary(rCharts)\nlibrary(leaflet)\noptions(RCHART_LIB = 'nvd3')\n\nshinyUI(navbarPage(\"SpatStat\",theme = shinytheme(\"journal\"),\n                   tabPanel(\"Overview\",\n                            navlistPanel(\n                                \"Header\",\n                                tabPanel(\"Scatterplot\",\n                                         tabsetPanel(type = \"tabs\", \n                                                     tabPanel(\"Plot\", showOutput(\"chart1\", lib=\"nvd3\"),\n                                                              downloadButton('scatterPlot',label='download plot')), \n                                                     tabPanel(\"Theory\", includeMarkdown(\"scatter.md\"))\n                                         )\n                                ),\n                                tabPanel(\"Density\",\n                                         tabsetPanel(type = \"tabs\", \n                                                     tabPanel(\"Plot\",\n                                                              sliderInput(\"sigma\", \"Sigma:\", min = 5, max = 15, value = bw.diggle(paracou), step = 0.5),\n                                                              plotOutput(\"chart2\", height=800),\n                                                              downloadButton('downloadPlot',label='download plot')), \n                                                     tabPanel(\"Theory\", includeMarkdown(\"density.md\"))\n                                         )\n                                ),\n                                tabPanel(\"Heatmap\",\n                                         tabsetPanel(type = \"tabs\", \n                                                     tabPanel(\"Plot\",\n                                                              tags$head(tags$script(src = \"https://code.highcharts.com/highcharts.js\"),\n                                                                        tags$script(src = \"https://code.highcharts.com/highcharts-more.js\"),\n                                                                        tags$script(src = \"https://code.highcharts.com/modules/exporting.js\"),\n                                                                        tags$script(src = \"https://code.highcharts.com/modules/heatmap.js\")\n                                                              ),\n                                                              sliderInput(\"nx\", \"nx:\", min = 0, max = 30, value = 5, step = 1),\n                                                              sliderInput(\"ny\", \"ny:\", min = 0, max = 30, value = 4, step = 1),\n                                                              br(),   \n                                                              showOutput(\"heatmap\", lib=\"highcharts\"),\n                                                              downloadButton('heatPlot',label='download plot')),\n                                                     tabPanel(\"Theory\", includeMarkdown(\"heat.md\"))\n                                                     )\n                                ),\n                                tabPanel(\"Summary\",\n                                         tabsetPanel(type = \"tabs\", \n                                                     tabPanel(\"Summary\", verbatimTextOutput(\"summary\")),\n                                                     tabPanel(\"Piechart\", showOutput(\"piechart\", lib=\"nvd3\")),\n                                                     tabPanel(\"Theory\", includeMarkdown(\"summary.md\"))\n                                         )\n                                )\n                            )\n                            ),\n                   navbarMenu(\"Summary Statistics (univariat)\",\n                              tabPanel(\"Pair Correlation Function\",\n                                       sidebarLayout(\n                                           sidebarPanel(\n                                               sliderInput(\"nrank_pcf\", \"nrank:\", 5, min = 1, max = 99, step = 1),\n                                               sliderInput(\"nsim_pcf\", \"nsim:\", 19, min = 19, max = 999, step = 1),\n                                               sliderInput(\"stoyan_pcf\", \"stoyan:\", 0.3, min = 0, max = 0.5, step = 0.01),\n                                               sliderInput(\"r_pcf\", \"r:\", 50, min = 0, max = 100, step = 1),\n                                               br(),\n                                               bsButton(\"button_pcf\", \"Run Statistics\", type='action', icon = icon(\"terminal\", lib=\"font-awesome\"),\n                                                        style=\"info\"),\n                                               downloadButton('pcfPlot',label='download plot')\n                                           ),\n                                           \n                                           # Show a tabset that includes a plot, summary, and table view\n                                           # of the generated distribution\n                                           mainPanel(\n                                               tabsetPanel(type = \"tabs\", \n                                                           tabPanel(\"Plot\", plotOutput(\"chart_pcf\")), \n                                                           tabPanel(\"Parameters\", includeMarkdown(\"pcf_params.md\")), \n                                                           tabPanel(\"Theory\", includeMarkdown(\"pcf_theory.md\"))\n                                               )\n                                           )\n                                       )\n                              ),\n                              tabPanel(\"L-function\",\n                                       sidebarLayout(\n                                           sidebarPanel(\n                                               sliderInput(\"nrank_lest\", \"nrank:\", 5, min = 1, max = 99, step = 1),\n                                               sliderInput(\"nsim_lest\", \"nsim:\", 19, min = 19, max = 999, step = 1),\n                                               sliderInput(\"r_lest\", \"r:\", 50, min = 0, max = 100, step = 1),\n                                               br(),\n                                               bsButton(\"button_lest\", \"Run Statistics\", type='action', icon = icon(\"terminal\", lib=\"font-awesome\"),\n                                                        style=\"info\"),\n                                               downloadButton('lestPlot',label='download plot')\n                                           ),\n                                           \n                                           # Show a tabset that includes a plot, summary, and table view\n                                           # of the generated distribution\n                                           mainPanel(\n                                               tabsetPanel(type = \"tabs\", \n                                                           tabPanel(\"Plot\", plotOutput(\"chart_lest\")), \n                                                           tabPanel(\"Parameters\", includeMarkdown(\"est_params.md\")), \n                                                           tabPanel(\"Theory\", includeMarkdown(\"lest_theory.md\"))\n                                               )\n                                           )\n                                       )\n                              ),\n                              tabPanel(\"G-function\",\n                                       sidebarLayout(\n                                           sidebarPanel(\n                                               sliderInput(\"nrank_gest\", \"nrank:\", 5, min = 1, max = 99, step = 1),\n                                               sliderInput(\"nsim_gest\", \"nsim:\", 19, min = 19, max = 999, step = 1),\n                                               sliderInput(\"r_gest\", \"r:\", 50, min = 0, max = 100, step = 1),\n                                               br(),\n                                               bsButton(\"button_gest\", \"Run Statistics\", type='action', icon = icon(\"terminal\", lib=\"font-awesome\"),\n                                                        style=\"info\"),\n                                               downloadButton('gestPlot',label='download plot')\n                                           ),\n                                           \n                                           # Show a tabset that includes a plot, summary, and table view\n                                           # of the generated distribution\n                                           mainPanel(\n                                               tabsetPanel(type = \"tabs\", \n                                                           tabPanel(\"Plot\", plotOutput(\"chart_gest\")), \n                                                           tabPanel(\"Parameters\", includeMarkdown(\"est_params.md\")), \n                                                           tabPanel(\"Theory\", includeMarkdown(\"gest_theory.md\"))\n                                               )\n                                           )\n                                       )\n                              )\n                      ),\n                   navbarMenu(\"Summary Statistics (bivariat)\",\n                              tabPanel(\"Mark Correlation Function\",\n                                       sidebarLayout(\n                                           sidebarPanel(\n                                               sliderInput(\"nrank_markcorr\", \"nrank:\", 5, min = 1, max = 99, step = 1),\n                                               sliderInput(\"nsim_markcorr\", \"nsim:\", 19, min = 19, max = 999, step = 1),\n                                               sliderInput(\"stoyan_markcorr\", \"stoyan:\", 0.3, min = 0, max = 0.5, step = 0.01),\n                                               sliderInput(\"r_markcorr\", \"r:\", 50, min = 0, max = 100, step = 1),\n                                               br(),\n                                               bsButton(\"button_markcorr\", \"Run Statistics\", type='action', icon = icon(\"terminal\", lib=\"font-awesome\"),\n                                                        style=\"info\"),\n                                               downloadButton('markcorrPlot',label='download plot')\n                                           ),\n                                           \n                                           # Show a tabset that includes a plot, summary, and table view\n                                           # of the generated distribution\n                                           mainPanel(\n                                               tabsetPanel(type = \"tabs\", \n                                                           tabPanel(\"Plot\", plotOutput(\"chart_markcorr\")), \n                                                           tabPanel(\"Parameters\", includeMarkdown(\"markcorr_params.md\")), \n                                                           tabPanel(\"Theory\", includeMarkdown(\"markcorr_theory.md\"))\n                                               )\n                                           )\n                                       )\n                              ),\n                              tabPanel(\"Multitype pair correlation function\",\n                                       sidebarLayout(\n                                           sidebarPanel(\n                                               sliderInput(\"stoyan_pcfcross\", \"stoyan:\", 0.3, min = 0, max = 0.5, step = 0.01),\n                                               sliderInput(\"nrank_pcfcross\", \"nrank:\", 5, min = 1, max = 99, step = 1),\n                                               sliderInput(\"nsim_pcfcross\", \"nsim:\", 19, min = 19, max = 999, step = 1),\n                                               sliderInput(\"r_pcfcross\", \"r:\", 50, min = 0, max = 100, step = 1),\n                                               br(),\n                                               bsButton(\"button_pcfcross\", \"Run Statistics\", type='action', icon = icon(\"terminal\", lib=\"font-awesome\"),\n                                                        style=\"info\"),\n                                               downloadButton('pcfcrossPlot',label='download plot')\n                                           ),\n                                           \n                                           # Show a tabset that includes a plot, summary, and table view\n                                           # of the generated distribution\n                                           mainPanel(\n                                               tabsetPanel(type = \"tabs\", \n                                                           tabPanel(\"Plot\", plotOutput(\"chart_pcfcross\")), \n                                                           tabPanel(\"Parameters\", includeMarkdown(\"pcfcross_params.md\")), \n                                                           tabPanel(\"Theory\", includeMarkdown(\"pcfcross_theory.md\"))\n                                               )\n                                           )\n                                       )\n                              )\n                   ),\n                   navbarMenu(\"More\",\n                              tabPanel(\"Table\",\n                                       dataTableOutput(\"table\")\n                              ),\n                              tabPanel(\"Map\",\n                                       tabsetPanel(type = \"tabs\", \n                                                   tabPanel(\"Plot\", leafletOutput('myMap', height=600)), \n                                                   tabPanel(\"Theory\", includeMarkdown(\"gest_theory.md\"))\n                                       )\n                              ),\n                              tabPanel(\"About\",\n                                       fluidRow(\n                                           column(6,\n                                                  includeMarkdown(\"about.md\")\n                                           ),\n                                           column(3,\n                                                  img(class=\"img-polaroid\",\n                                                      width = 500,\n                                                      src=paste0(\"http://upload.wikimedia.org/\",\n                                                                 \"wikipedia/commons/f/fc/\",\n                                                                 \"French_Guiana_tropical_forest_towards_Cacao.jpg\")),\n                                                  tags$small(\n                                                      \"Source: French Guiana: tropical forest towards Cacao. Panorama at Bellevue.\",\n                                                      \", 24 March 2013, by\",\n                                                      a(href=\"https://commons.wikimedia.org/wiki/User:Cayambe\",\n                                                        \"User:Cayambe\")\n                                                  )\n                                           )\n                                       )\n                              ),\n                              tabPanel(\"Further reading\",\n                                       includeMarkdown(\"references.md\")\n                              )\n                   )\n))",
    "created" : 1438247231879.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2486829932",
    "id" : "30857066",
    "lastKnownWriteTime" : 1438282900,
    "path" : "~/Documents/spatstat/dist/shiny/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}